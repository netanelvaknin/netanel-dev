{"version":3,"sources":["pages/admin/login/Login.tsx","../node_modules/react-cookie/es6/useCookies.js"],"names":["schema","Yup","shape","email","required","password","min","max","Login","useCookies","setCookie","history","useHistory","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","setError","onSubmit","a","instance","post","response","data","token","push","Error","console","log","type","message","TextFieldStyle","name","placeholder","ButtonStyle","variant","color","username","styled","TextField","Button","dependencies","cookies","useContext","CookiesContext","initialCookies","getAll","_a","useState","allCookies","setCookies","previousCookiesRef","useRef","useEffect","onChange","newCookies","oldCookies","_i","dependencies_1","length","dependency","shouldUpdate","current","addChangeListener","removeChangeListener","useMemo","set","bind","remove"],"mappings":"qQAUMA,EAASC,MAAaC,MAAM,CAChCC,MAAOF,MAAaE,QAAQC,WAC5BC,SAAUJ,MAAaK,IAAI,GAAGC,IAAI,IAAIH,aAiEzBI,UAzDf,WACE,MAA6BC,cAA7B,mBAAgBC,GAAhB,WACMC,EAAUC,cAChB,EAKIC,YAAQ,CACVC,SAAUC,YAAYf,KALtBgB,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OACbE,EAJF,EAIEA,SAKIC,EAAQ,uCAAG,iCAAAC,EAAA,6DAASnB,EAAT,EAASA,MAAOE,EAAhB,EAAgBA,SAAhB,kBAEUkB,IAASC,KAAK,eAAgB,CAAErB,QAAOE,aAFjD,YAEPoB,EAFO,QAGAC,KAAKC,MAHL,iBAIXjB,EAAU,QAASe,EAASC,KAAKC,OACjChB,EAAQiB,KAAK,UALF,8BAOL,IAAIC,MAPC,0DAUbC,QAAQC,IAAI,QACZX,EAAS,WAAY,CACnBY,KAAM,SACNC,QAAS,uIAbE,0DAAH,sDAkBd,OACE,uBAAMZ,SAAUJ,EAAaI,GAA7B,UACE,cAACa,EAAD,CACEC,KAAK,QACLH,KAAK,QACLhB,SAAUA,EACVoB,YAAY,4DAGd,cAAC,IAAD,CACEJ,KAAK,WACLG,KAAK,WACLnB,SAAUA,EACVoB,YAAY,mCAGd,cAACC,EAAD,CAAaC,QAAQ,YAAYC,MAAM,YAAYP,KAAK,SAAxD,4CAICd,EAAOsB,UACN,cAAC,IAAD,UAAetB,EAAOsB,SAASP,cAQvC,IAAMC,EAAiBO,YAAOC,KAAV,wEAAGD,CAAH,gDAMdJ,EAAcI,YAAOE,KAAV,qEAAGF,CAAH,6C,iCCrFjB,qDAEe,SAAShC,EAAWmC,GAC/B,IAAIC,EAAUC,qBAAWC,KACzB,IAAKF,EACD,MAAM,IAAIhB,MAAM,6BAEpB,IAAImB,EAAiBH,EAAQI,SACzBC,EAAKC,mBAASH,GAAiBI,EAAaF,EAAG,GAAIG,EAAaH,EAAG,GACnEI,EAAqBC,iBAAOH,GAgBhC,OAfAI,qBAAU,WACN,SAASC,IACL,IAAIC,EAAab,EAAQI,UAerC,SAAsBL,EAAcc,EAAYC,GAC5C,IAAKf,EACD,OAAO,EAEX,IAAK,IAAIgB,EAAK,EAAGC,EAAiBjB,EAAcgB,EAAKC,EAAeC,OAAQF,IAAM,CAC9E,IAAIG,EAAaF,EAAeD,GAChC,GAAIF,EAAWK,KAAgBJ,EAAWI,GACtC,OAAO,EAGf,OAAO,GAxBKC,CAAapB,GAAgB,KAAMc,EAAYJ,EAAmBW,UAClEZ,EAAWK,GAEfJ,EAAmBW,QAAUP,EAGjC,OADAb,EAAQqB,kBAAkBT,GACnB,WACHZ,EAAQsB,qBAAqBV,MAElC,CAACZ,IAGG,CAACO,EAFQgB,mBAAQ,WAAc,OAAOvB,EAAQwB,IAAIC,KAAKzB,KAAa,CAACA,IACzDuB,mBAAQ,WAAc,OAAOvB,EAAQ0B,OAAOD,KAAKzB,KAAa,CAACA","file":"static/js/9.ba876f9e.chunk.js","sourcesContent":["import { useForm } from \"react-hook-form\";\r\nimport * as Yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { TextField, ErrorMessage } from \"../../../ui\";\r\nimport instance from \"../../../api\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst schema = Yup.object().shape({\r\n  email: Yup.string().email().required(),\r\n  password: Yup.string().min(2).max(25).required(),\r\n});\r\n\r\ninterface LoginValues {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nfunction Login() {\r\n  const [cookies, setCookie] = useCookies();\r\n  const history = useHistory();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    setError,\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const onSubmit = async ({ email, password }: LoginValues) => {\r\n    try {\r\n      const response = await instance.post(\"/admin/login\", { email, password });\r\n      if (response.data.token) {\r\n        setCookie(\"token\", response.data.token);\r\n        history.push(\"/admin\");\r\n      } else {\r\n        throw new Error();\r\n      }\r\n    } catch (e) {\r\n      console.log(\"here\");\r\n      setError(\"username\", {\r\n        type: \"manual\",\r\n        message: \"אימייל או סיסמא לא תואמים\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <TextFieldStyle\r\n        name=\"email\"\r\n        type=\"email\"\r\n        register={register}\r\n        placeholder=\"כתובת מייל\"\r\n      />\r\n\r\n      <TextField\r\n        type=\"password\"\r\n        name=\"password\"\r\n        register={register}\r\n        placeholder=\"סיסמה\"\r\n      />\r\n\r\n      <ButtonStyle variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n        כניסה\r\n      </ButtonStyle>\r\n\r\n      {errors.username && (\r\n        <ErrorMessage>{errors.username.message}</ErrorMessage>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\nconst TextFieldStyle = styled(TextField)`\r\n  &.MuiFormControl-root {\r\n    margin-bottom: 2rem;\r\n  }\r\n`;\r\n\r\nconst ButtonStyle = styled(Button)`\r\n  &.MuiButtonBase-root {\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n","import { useContext, useEffect, useState, useRef, useMemo } from 'react';\r\nimport CookiesContext from './CookiesContext';\r\nexport default function useCookies(dependencies) {\r\n    var cookies = useContext(CookiesContext);\r\n    if (!cookies) {\r\n        throw new Error('Missing <CookiesProvider>');\r\n    }\r\n    var initialCookies = cookies.getAll();\r\n    var _a = useState(initialCookies), allCookies = _a[0], setCookies = _a[1];\r\n    var previousCookiesRef = useRef(allCookies);\r\n    useEffect(function () {\r\n        function onChange() {\r\n            var newCookies = cookies.getAll();\r\n            if (shouldUpdate(dependencies || null, newCookies, previousCookiesRef.current)) {\r\n                setCookies(newCookies);\r\n            }\r\n            previousCookiesRef.current = newCookies;\r\n        }\r\n        cookies.addChangeListener(onChange);\r\n        return function () {\r\n            cookies.removeChangeListener(onChange);\r\n        };\r\n    }, [cookies]);\r\n    var setCookie = useMemo(function () { return cookies.set.bind(cookies); }, [cookies]);\r\n    var removeCookie = useMemo(function () { return cookies.remove.bind(cookies); }, [cookies]);\r\n    return [allCookies, setCookie, removeCookie];\r\n}\r\nfunction shouldUpdate(dependencies, newCookies, oldCookies) {\r\n    if (!dependencies) {\r\n        return true;\r\n    }\r\n    for (var _i = 0, dependencies_1 = dependencies; _i < dependencies_1.length; _i++) {\r\n        var dependency = dependencies_1[_i];\r\n        if (newCookies[dependency] !== oldCookies[dependency]) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n"],"sourceRoot":""}
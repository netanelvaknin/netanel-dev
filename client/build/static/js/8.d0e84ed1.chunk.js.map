{"version":3,"sources":["pages/admin/login/Login.tsx","pages/admin/add-post/AddPost.tsx","pages/admin/my-posts/MyPosts.tsx","pages/admin/AdminStyles.ts","pages/admin/Admin.tsx"],"names":["schema","Yup","shape","email","required","password","min","max","Login","useCookies","setCookie","history","useHistory","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","setError","onSubmit","a","instance","post","response","data","token","push","Error","console","log","type","message","TextFieldStyle","name","placeholder","ButtonStyle","variant","color","username","styled","TextField","Button","AddPost","cookies","useState","content","setContent","defaultValues","title","description","setValue","postId","useParams","useEffect","get","then","postToEdit","find","_id","resetFields","formValues","headers","Authorization","res","status","createdAt","moment","format","EditorWrapper","theme","value","onChange","delta","source","editor","getHTML","modules","div","toolbar","header","list","indent","direction","MyPosts","posts","setPosts","loading","setLoading","handleRemovePost","idToRemove","window","location","reload","length","map","onClick","Sidebar","aside","Admin","url","useRouteMatch","style","display","pathname","exact","path"],"mappings":"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","file":"static/js/8.d0e84ed1.chunk.js","sourcesContent":["import { useForm } from \"react-hook-form\";\r\nimport * as Yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { TextField, ErrorMessage } from \"../../../ui\";\r\nimport instance from \"../../../api\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst schema = Yup.object().shape({\r\n  email: Yup.string().email().required(),\r\n  password: Yup.string().min(2).max(25).required(),\r\n});\r\n\r\ninterface LoginValues {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nfunction Login() {\r\n  const [cookies, setCookie] = useCookies();\r\n  const history = useHistory();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    setError,\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const onSubmit = async ({ email, password }: LoginValues) => {\r\n    try {\r\n      const response = await instance.post(\"/admin/login\", { email, password });\r\n      if (response.data.token) {\r\n        setCookie(\"token\", response.data.token);\r\n        history.push(\"/admin\");\r\n      } else {\r\n        throw new Error();\r\n      }\r\n    } catch (e) {\r\n      console.log(\"here\");\r\n      setError(\"username\", {\r\n        type: \"manual\",\r\n        message: \"אימייל או סיסמא לא תואמים\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <TextFieldStyle\r\n        name=\"email\"\r\n        type=\"email\"\r\n        register={register}\r\n        placeholder=\"כתובת מייל\"\r\n      />\r\n\r\n      <TextField\r\n        type=\"password\"\r\n        name=\"password\"\r\n        register={register}\r\n        placeholder=\"סיסמה\"\r\n      />\r\n\r\n      <ButtonStyle variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n        כניסה\r\n      </ButtonStyle>\r\n\r\n      {errors.username && (\r\n        <ErrorMessage>{errors.username.message}</ErrorMessage>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\nconst TextFieldStyle = styled(TextField)`\r\n  &.MuiFormControl-root {\r\n    margin-bottom: 2rem;\r\n  }\r\n`;\r\n\r\nconst ButtonStyle = styled(Button)`\r\n  &.MuiButtonBase-root {\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n","import { useState, useEffect } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport instance from \"../../../api\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport moment from \"moment\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nfunction AddPost() {\r\n  const history = useHistory();\r\n  const [cookies] = useCookies();\r\n  const [content, setContent] = useState<string>(\"\");\r\n  const { register, setValue, handleSubmit } = useForm({\r\n    defaultValues: {\r\n      title: \"\",\r\n      description: \"\",\r\n    },\r\n  });\r\n  const { postId } = useParams<{ postId: string }>();\r\n\r\n  useEffect(() => {\r\n    instance.get(\"/posts\").then((response) => {\r\n      if (response.data && postId) {\r\n        const postToEdit = response.data.find(\r\n          (post: any) => post._id === postId\r\n        );\r\n\r\n        setContent(postToEdit.content);\r\n        setValue(\"title\", postToEdit.title);\r\n        setValue(\"description\", postToEdit.description);\r\n      }\r\n    });\r\n  }, [postId, setValue]);\r\n\r\n  useEffect(() => {\r\n    if (!postId) {\r\n      resetFields();\r\n    }\r\n  }, [postId]);\r\n\r\n  const onChange = (content: any, delta: any, source: any, editor: any) => {\r\n    setContent(editor.getHTML());\r\n  };\r\n\r\n  const resetFields = () => {\r\n    setValue(\"title\", \"\");\r\n    setContent(\"\");\r\n  };\r\n\r\n  const onSubmit = async (formValues: any) => {\r\n    if (postId) {\r\n      await instance\r\n        .post(\r\n          \"/posts/update\",\r\n          {\r\n            _id: postId,\r\n            content,\r\n            title: formValues.title,\r\n            description: formValues.description,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${cookies.token}`,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            resetFields();\r\n            history.push(\"/admin/posts\");\r\n          }\r\n        });\r\n    } else {\r\n      await instance\r\n        .post(\r\n          \"/posts/insert\",\r\n          {\r\n            content,\r\n            title: formValues.title,\r\n            createdAt: moment().format(\"ll\"),\r\n            description: formValues.description,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${cookies.token}`,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            resetFields();\r\n            history.push(\"/admin/posts\");\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <input {...register(\"title\")} name=\"title\" placeholder=\"כותרת הפוסט\" />\r\n      <input\r\n        {...register(\"description\")}\r\n        name=\"description\"\r\n        placeholder=\"תיאור\"\r\n      />\r\n      <EditorWrapper>\r\n        <ReactQuill\r\n          theme=\"snow\"\r\n          value={content}\r\n          onChange={onChange}\r\n          modules={modules}\r\n        />\r\n      </EditorWrapper>\r\n\r\n      <button type=\"submit\">{postId ? \"עדכן\" : \"הוסף\"}</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddPost;\r\n\r\nconst EditorWrapper = styled.div`\r\n  .ql-syntax {\r\n    direction: ltr;\r\n  }\r\n`;\r\n\r\nconst modules = {\r\n  toolbar: [\r\n    [{ header: [1, 2, false] }],\r\n    [\"blockquote\", \"code-block\"],\r\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n    [\r\n      { list: \"ordered\" },\r\n      { list: \"bullet\" },\r\n      { indent: \"-1\" },\r\n      { indent: \"+1\" },\r\n    ],\r\n    [\"link\", \"image\", \"video\"],\r\n    [{ direction: \"rtl\" }],\r\n  ],\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport instance from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\nfunction MyPosts() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n  const [cookies] = useCookies();\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    instance.get(\"/posts\").then((response) => {\r\n      setPosts(response.data);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  const handleRemovePost = async (idToRemove: string) => {\r\n    await instance\r\n      .post(\r\n        \"/posts/delete\",\r\n        {\r\n          _id: idToRemove,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${cookies.token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          window.location.reload();\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {posts.length > 0 ? posts.map((post: any) => {\r\n        return (\r\n          <div key={post._id}>\r\n            <p>{post.title}</p>\r\n            <p>{post.createdAt} נוצר ב-</p>\r\n            <button onClick={() => history.push(`/admin/${post._id}`)}>\r\n              עריכה\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                handleRemovePost(post._id);\r\n              }}\r\n            >\r\n              מחיקה\r\n            </button>\r\n          </div>\r\n        );\r\n      }) : (\r\n        <div>\r\n          {loading ? <h1>Loading...</h1> : <h1>No posts</h1>}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyPosts;\r\n","import styled from \"styled-components/macro\";\r\n\r\nexport const Sidebar = styled.aside`\r\n  height: 90vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: 2rem;\r\n  padding-left: 2rem;\r\n  border-left: 1px solid rgba(0, 0, 0, 0.12);\r\n\r\n  & .MuiButton-text,\r\n  .MuiButton-text:hover {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n","import { useEffect } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AddPost from \"./add-post/AddPost\";\r\nimport MyPosts from \"./my-posts/MyPosts\";\r\nimport Login from \"./login/Login\";\r\nimport { useRouteMatch, Switch, Route } from \"react-router-dom\";\r\nimport { Sidebar } from \"./AdminStyles\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nfunction Admin() {\r\n  const { url } = useRouteMatch();\r\n  const [cookies] = useCookies();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!cookies.token) {\r\n      history.push(\"/admin/login\");\r\n    }\r\n  }, [cookies, history]);\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      {history.location.pathname !== \"/admin/login\" && (\r\n        <Sidebar>\r\n          <Button onClick={() => history.push(`${url}/posts`)}>\r\n            המאמרים שלי\r\n          </Button>\r\n          <Button onClick={() => history.push(`${url}/posts/insert`)}>\r\n            הוסף מאמר חדש\r\n          </Button>\r\n        </Sidebar>\r\n      )}\r\n\r\n      <Switch>\r\n        <Route exact path={`${url}/posts`}>\r\n          <MyPosts />\r\n        </Route>\r\n        <Route exact path={`${url}/login`}>\r\n          <Login />\r\n        </Route>\r\n        <Route exact path={`${url}/posts/insert`}>\r\n          <AddPost />\r\n        </Route>\r\n        <Route path={`${url}/:postId`}>\r\n          <AddPost />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n"],"sourceRoot":""}